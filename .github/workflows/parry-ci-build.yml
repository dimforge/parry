name: parry CI build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Clippy
        run: cargo clippy
  build-native:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get install -y cmake libxcb-composite0-dev
      - name: Build parry2d
        run: cargo build --verbose -p parry2d;
      - name: Build parry3d
        run: cargo build --verbose -p parry3d;
      - name: Build parry2d SIMD
        run: cd crates/parry2d; cargo build --verbose --features simd-stable;
      - name: Build parry3d SIMD
        run: cd crates/parry3d; cargo build --verbose --features simd-stable;
      - name: Check serialization
        run: cargo check --features bytemuck-serialize,serde-serialize,rkyv-serialize;
      - name: Run tests
        run: cargo test
  build-wasm:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add wasm32-unknown-unknown
      - name: build parry2d
        run: cd crates/parry2d && cargo build --verbose --target wasm32-unknown-unknown;
      - name: build parry3d
        run: cd crates/parry3d && cargo build --verbose --target wasm32-unknown-unknown;
  build-no-std:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - name: install xargo
        run: cp .github/Xargo.toml .; rustup component add rust-src; cargo install -f xargo;
      - name: build x86_64-unknown-linux-gnu
        run: xargo build --verbose --no-default-features --features required-features --target=x86_64-unknown-linux-gnu;
      - name: build thumbv7em-none-eabihf
        run: xargo build --verbose --no-default-features --features required-features --target=thumbv7em-none-eabihf;
